{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_post__WEBPACK_IMPORTED_MODULE_3__","BlogPostTemplate","_ref","data","pageContext","console","log","_data$markdownRemark","markdownRemark","_data$markdownRemark$","frontmatter","title","date","path","coverImage","id","html","next","previous","a","createElement","key","previousPost","nextPost","propTypes","PropTypes","object","isRequired","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAMMY,EAAmB,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAChCC,QAAQC,IAAIH,GADsC,IAAAI,EAM9CJ,EAAKK,eANyCC,EAAAF,EAGhDG,YAAeC,EAHiCF,EAGjCE,MAAOC,EAH0BH,EAG1BG,KAAMC,EAHoBJ,EAGpBI,KAAMC,EAHcL,EAGdK,WAClCC,EAJgDR,EAIhDQ,GACAC,EALgDT,EAKhDS,KAEMC,EAAmBb,EAAnBa,KAAMC,EAAad,EAAbc,SAEd,OACEvB,EAAAwB,EAAAC,cAACrB,EAAA,EAAD,KACEJ,EAAAwB,EAAAC,cAACpB,EAAA,EAAD,CACEqB,IAAKN,EACLJ,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,WAAYA,EACZE,KAAMA,EACNM,aAAcJ,EACdK,SAAUN,MAMHhB,YAEfA,EAAiBuB,UAAY,CAC3BrB,KAAMsB,IAAUC,OAAOC,WACvBvB,YAAaqB,IAAUG,MAAM,CAC3BX,KAAMQ,IAAUC,OAChBR,SAAUO,IAAUC,UAIjB,IAAMjC,EAAS","file":"component---src-templates-page-js-aa10b98a5b723d899a94.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  console.log(data);\n  const {\n    frontmatter: { title, date, path, coverImage },\n    id,\n    html,\n  } = data.markdownRemark\n  const { next, previous } = pageContext\n\n  return (\n    <Layout>\n      <Post\n        key={id}\n        title={title}\n        date={date}\n        path={path}\n        coverImage={coverImage}\n        html={html}\n        previousPost={previous}\n        nextPost={next}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    next: PropTypes.object,\n    previous: PropTypes.object,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query($pathSlug: String) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        path\n        excerpt\n        coverImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      id\n      html\n    }\n  }\n`\n"],"sourceRoot":""}