{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postsQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_post__WEBPACK_IMPORTED_MODULE_3__","_components_navigation__WEBPACK_IMPORTED_MODULE_4__","Index","_ref","data","_ref$pageContext","pageContext","nextPagePath","previousPagePath","posts","allMarkdownRemark","edges","a","createElement","map","_ref2","node","id","autoExcerpt","excerpt","slug","fields","_node$frontmatter","frontmatter","title","date","tags","key","previousPath","previousLabel","nextPath","nextLabel","propTypes","PropTypes","object","isRequired","shape","string"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,+BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAOMa,EAAQ,SAAAC,GAA+D,IAA5DC,EAA4DD,EAA5DC,KAA4DC,EAAAF,EAAtDG,YAAeC,EAAuCF,EAAvCE,aAAcC,EAAyBH,EAAzBG,iBAEpBC,EAC1BL,EADFM,kBAAqBC,MAGvB,OACEhB,EAAAiB,EAAAC,cAACd,EAAA,EAAD,KACGU,EAAMK,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEVC,EAIED,EAJFC,GACSC,EAGPF,EAHFG,QACUC,EAERJ,EAFFK,OAAUD,KAJWE,EAMnBN,EADFO,YAAeC,EALMF,EAKNE,MAAOC,EALDH,EAKCG,KAAMN,EALPG,EAKOH,QAASO,EALhBJ,EAKgBI,KAGvC,OACE/B,EAAAiB,EAAAC,cAACb,EAAA,EAAD,CACE2B,IAAKV,EACLO,MAAOA,EACPC,KAAMA,EACNL,KAAMA,EACNM,KAAMA,EACNP,QAASA,GAAWD,MAK1BvB,EAAAiB,EAAAC,cAACZ,EAAA,EAAD,CACE2B,aAAcpB,EACdqB,cAAc,cACdC,SAAUvB,EACVwB,UAAU,kBAMlB7B,EAAM8B,UAAY,CAChB5B,KAAM6B,IAAUC,OAAOC,WACvB7B,YAAa2B,IAAUG,MAAM,CAC3B7B,aAAc0B,IAAUI,OACxB7B,iBAAkByB,IAAUI,UAIzB,IAAM5C,EAAU,aA2BRS","file":"component---src-templates-index-js-9ba4e5f0aadd14dd2090.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Navigation from '../components/navigation'\n\nconst Index = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <Layout>\n      {posts.map(({ node }) => {\n        const {\n          id,\n          excerpt: autoExcerpt,\n          fields: { slug },\n          frontmatter: { title, date, excerpt, tags },\n        } = node\n\n        return (\n          <Post\n            key={id}\n            title={title}\n            date={date}\n            slug={slug}\n            tags={tags}\n            excerpt={excerpt || autoExcerpt}\n          />\n        )\n      })}\n\n      <Navigation\n        previousPath={previousPagePath}\n        previousLabel=\"Newer posts\"\n        nextPath={nextPagePath}\n        nextLabel=\"Older posts\"\n      />\n    </Layout>\n  )\n}\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts//\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields{\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            tags\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index\n"],"sourceRoot":""}